version: "3.3"
services:
  backend:
    build: ./server
    ports:
      - "5000:5000"
    volumes:
      - logs:/app/logs
      - ./server:/app
      - /app/node_modules
  frontend:
    build: ./client
    ports:
      - "3000:3000"
    volumes:
      - ./client/src:/app/src
    stdin_open: true
    tty: true
    depends_on:
      - backend
  nginx:
    build: ./nginx
    expose:
      - 80
    links:
      - backend
      - frontend
      - nginx-proxy
      - letsencrypt
    environment: 
      - VIRTUAL_HOST=deliexpressg5.xyz,www.deliexpressg5.xyz
      - LETSENCRYPT_HOST=deliexpressg5.xyz,www.deliexpressg5.xyz
    restart: always

  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - certs:/etc/nginx/certs:ro
        - vhostd:/etc/nginx/vhost.d
        - html:/usr/share/nginx/html
    labels:
        - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
      image: jrcs/letsencrypt-nginx-proxy-companion
      restart: always
      environment:
          - NGINX_PROXY_CONTAINER=nginx-proxy
      volumes:
        - certs:/etc/nginx/certs:rw
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - vhostd:/etc/nginx/vhost.d
        - html:/usr/share/nginx/html
volumes:
  certs:
  html:
  vhostd: